{"version":3,"sources":["helpers.js","App.js","serviceWorker.js","index.js"],"names":["random","min","max","Math","floor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","fieldWidth","scene","undefined","camera","renderer","cones","light","cube","plane","group","pivot","bounceAnimation","animate","bind","assertThisInitialized","init","onKeyPress","onKeyDown","onKeyUp","initListeners","initScene","initCamera","initRenderer","initCones","initLight","initPlane","initCube","initGroup","initPivot","initBounceAnimation","document","addEventListener","THREE","fogColor","background","fog","window","innerWidth","innerHeight","position","y","z","shadowMap","enabled","type","setSize","current","appendChild","domElement","coneGeometry","coneMaterial","color","shininess","i","cone","x","castShadow","push","add","set","target","planeGeometry","planeMesh","rotation","PI","receiveShadow","cubeGeometry","cubeMaterial","_this2","forEach","anime","targets","duration","direction","easing","loop","pause","e","key","forward","rotate","play","sin","cos","requestAnimationFrame","render","react_default","a","createElement","ref","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d49eb48.chunk.js","sourcesContent":["\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport {random} from './helpers';\nimport anime from \"animejs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n\n    this.fieldWidth = 100;\n\n    this.scene = undefined;\n    this.camera = undefined;\n    this.renderer = undefined;\n    this.cones = [];\n    this.light = undefined;\n    this.cube = undefined;\n    this.plane = undefined;\n    this.group = undefined;\n    this.pivot = undefined;\n\n    this.bounceAnimation = undefined;\n\n    this.animate = this.animate.bind(this);\n    this.init = this.init.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.initListeners = this.initListeners.bind(this);\n    this.initScene = this.initScene.bind(this);\n    this.initCamera = this.initCamera.bind(this);\n    this.initRenderer = this.initRenderer.bind(this);\n    this.initCones = this.initCones.bind(this);\n    this.initLight = this.initLight.bind(this);\n    this.initPlane = this.initPlane.bind(this);\n    this.initCube = this.initCube.bind(this);\n    this.initGroup = this.initGroup.bind(this);\n    this.initPivot = this.initPivot.bind(this);\n    this.initBounceAnimation = this.initBounceAnimation.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n    this.animate();\n  }\n\n  init() {\n    this.initListeners();\n    this.initScene();\n    this.initCamera();\n    this.initRenderer();\n    this.initCones();\n    this.initCube();\n    this.initLight();\n    this.initPlane();\n    this.initGroup();\n    this.initPivot();\n    this.initBounceAnimation();\n  }\n\n  initListeners() {\n    document.addEventListener('keypress', this.onKeyPress);\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keyup', this.onKeyUp);\n  }\n\n  initScene() {\n    this.scene = new THREE.Scene();\n    const fogColor = new THREE.Color(0x000000);\n    this.scene.background = fogColor;\n    this.scene.fog = new THREE.Fog(fogColor, 0.0025, 20);\n  };\n\n  initCamera() {\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.camera.position.y = 2;\n    this.camera.position.z = 3;\n  };\n\n  initRenderer() {\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.myRef.current.appendChild(this.renderer.domElement);\n  };\n\n  initCones() {\n    const coneGeometry = new THREE.ConeGeometry(1, 10, 32);\n    const coneMaterial = new THREE.MeshToonMaterial({\n      color: 0x2c6810,\n      shininess: 0\n    });\n    for (let i = 0; i < this.fieldWidth * 5; ++i) {\n      const cone = new THREE.Mesh(coneGeometry, coneMaterial);\n      cone.position.x = random(-this.fieldWidth / 2, this.fieldWidth / 2);\n      cone.position.z = random(-this.fieldWidth / 2, this.fieldWidth / 2);\n      cone.castShadow = true;\n      this.cones.push(cone);\n      this.scene.add(cone);\n    }\n  }\n\n  initLight() {\n    this.light = new THREE.DirectionalLight(0xffffff, 1);\n    this.light.position.set(this.camera.position.x, this.camera.position.y, this.camera.position.z - 2);\n    this.light.target = this.cube;\n    this.light.castShadow = true;\n    this.scene.add(this.light);\n  };\n\n  initPlane() {\n    const planeGeometry = new THREE.PlaneGeometry(this.fieldWidth, this.fieldWidth, 1, 1);\n    const planeMesh = new THREE.MeshLambertMaterial({color: 0x011d49});\n    this.plane = new THREE.Mesh(planeGeometry, planeMesh);\n    this.plane.rotation.x = -Math.PI / 2;\n    this.plane.receiveShadow = true;\n    this.scene.add(this.plane);\n  }\n\n  initCube() {\n    const cubeGeometry = new THREE.BoxGeometry(.5, .5, 1);\n    const cubeMaterial = new THREE.MeshToonMaterial({\n      color: 0xff7272,\n      shininess: 200\n    });\n    this.cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n    this.cube.position.y = 1;\n    this.cube.castShadow = true;\n    this.scene.add(this.cube);\n  }\n\n  initGroup() {\n    this.group = new THREE.Object3D();\n    this.group.add(this.plane);\n    this.cones.forEach(cone => this.group.add(cone));\n    this.scene.add(this.group);\n  }\n\n  initPivot() {\n    this.pivot = new THREE.Object3D();\n    this.pivot.add(this.group);\n    this.scene.add(this.pivot);\n  }\n\n  initBounceAnimation() {\n    this.bounceAnimation = anime({\n      targets: this.cube.position,\n      y: 1.2,\n      duration: 1200,\n      direction: 'alternate',\n      easing: 'linear',\n      loop: true\n    });\n    this.bounceAnimation.pause();\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case 'w':\n        this.forward();\n        break;\n      case 'a':\n        this.rotate('left');\n        break;\n      case 'd':\n        this.rotate('right');\n        break;\n      default:\n        break;\n    }\n  }\n\n  onKeyUp(e) {\n    switch (e.key) {\n      case 'w':\n        this.bounceAnimation.pause();\n        break;\n      default:\n        break;\n    }\n  }\n\n  onKeyDown(e) {\n    switch (e.key) {\n      case 'w':\n        this.bounceAnimation.play();\n        break;\n      default:\n        break;\n    }\n  }\n\n  forward() {\n    this.group.position.x -= Math.sin(this.pivot.rotation.y) * 0.01;\n    this.group.position.z += Math.cos(this.pivot.rotation.y) * 0.01;\n  }\n\n  rotate(direction) {\n    if (direction === 'right') {\n      this.pivot.rotation.y += .01;\n    }\n    if (direction === 'left') {\n      this.pivot.rotation.y -= .01;\n    }\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div ref={this.myRef}>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}