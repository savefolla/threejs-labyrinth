{"version":3,"sources":["helpers.js","App.js","serviceWorker.js","index.js"],"names":["random","min","max","Math","floor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","fieldWidth","scene","undefined","camera","renderer","cones","cylinders","light","plane","group","pivot","bounceAnimation","animate","bind","assertThisInitialized","init","onKeyPress","onKeyDown","onKeyUp","initListeners","initScene","initCamera","initRenderer","initTrees","initLight","initPlane","initGroup","initPivot","initBounceAnimation","document","addEventListener","THREE","fogColor","background","fog","window","innerWidth","innerHeight","position","y","z","shadowMap","enabled","type","setSize","current","appendChild","domElement","cylinderGeometry","cylinderMaterial","color","shininess","coneGeometry","coneMaterial","i","x","cone","cylinder","castShadow","push","add","set","planeGeometry","planeMesh","rotation","PI","receiveShadow","_this2","forEach","anime","targets","duration","direction","easing","loop","pause","e","key","forward","rotate","play","sin","cos","requestAnimationFrame","render","react_default","a","createElement","ref","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd9e3096.chunk.js","sourcesContent":["\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};","import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport {random} from './helpers';\nimport anime from \"animejs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n\n    this.fieldWidth = 100;\n\n    this.scene = undefined;\n    this.camera = undefined;\n    this.renderer = undefined;\n    this.cones = [];\n    this.cylinders = [];\n    this.light = undefined;\n    this.plane = undefined;\n    this.group = undefined;\n    this.pivot = undefined;\n\n    this.bounceAnimation = undefined;\n\n    this.animate = this.animate.bind(this);\n    this.init = this.init.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.initListeners = this.initListeners.bind(this);\n    this.initScene = this.initScene.bind(this);\n    this.initCamera = this.initCamera.bind(this);\n    this.initRenderer = this.initRenderer.bind(this);\n    this.initTrees = this.initTrees.bind(this);\n    this.initLight = this.initLight.bind(this);\n    this.initPlane = this.initPlane.bind(this);\n    this.initGroup = this.initGroup.bind(this);\n    this.initPivot = this.initPivot.bind(this);\n    this.initBounceAnimation = this.initBounceAnimation.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n    this.animate();\n  }\n\n  init() {\n    this.initListeners();\n    this.initScene();\n    this.initCamera();\n    this.initRenderer();\n    this.initTrees();\n    this.initLight();\n    this.initPlane();\n    this.initGroup();\n    this.initPivot();\n    this.initBounceAnimation();\n  }\n\n  initListeners() {\n    document.addEventListener('keypress', this.onKeyPress);\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keyup', this.onKeyUp);\n  }\n\n  initScene() {\n    this.scene = new THREE.Scene();\n    const fogColor = new THREE.Color(0x000000);\n    this.scene.background = fogColor;\n    this.scene.fog = new THREE.Fog(fogColor, 0.0025, 20);\n  };\n\n  initCamera() {\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.camera.position.y = 2;\n    this.camera.position.z = 3;\n  };\n\n  initRenderer() {\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.myRef.current.appendChild(this.renderer.domElement);\n  };\n\n  initTrees() {\n    const cylinderGeometry = new THREE.CylinderGeometry(.3, .3, 2, 10);\n    const cylinderMaterial = new THREE.MeshToonMaterial({\n      color: 0x4c2203,\n      shininess: 0\n    });\n    const coneGeometry = new THREE.ConeGeometry(1, 10, 32);\n    const coneMaterial = new THREE.MeshToonMaterial({\n      color: 0x2c6810,\n      shininess: 0\n    });\n    for (let i = 0; i < this.fieldWidth * 5; ++i) {\n      const position = {\n        x: random(-this.fieldWidth / 2, this.fieldWidth / 2),\n        z: random(-this.fieldWidth / 2, this.fieldWidth / 2)\n      };\n      const cone = new THREE.Mesh(coneGeometry, coneMaterial);\n      const cylinder = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\n      cone.position.x = position.x;\n      cone.position.z = position.z;\n      cone.position.y = 6;\n      cylinder.position.x = position.x;\n      cylinder.position.z = position.z;\n      cone.castShadow = true;\n      this.cones.push(cone);\n      this.cylinders.push(cylinder);\n      this.scene.add(cone);\n      this.scene.add(cylinder);\n    }\n  }\n\n  initLight() {\n    this.light = new THREE.SpotLight(0xffffff, 1, 20, 8, 1);\n    this.light.position.set(this.camera.position.x, this.camera.position.y, this.camera.position.z - 2);\n    this.light.castShadow = true;\n    this.scene.add(this.light);\n  };\n\n  initPlane() {\n    const planeGeometry = new THREE.PlaneGeometry(this.fieldWidth, this.fieldWidth, 1, 1);\n    const planeMesh = new THREE.MeshToonMaterial({\n      color: 0x000c02,\n      shininess: 200\n    });\n    this.plane = new THREE.Mesh(planeGeometry, planeMesh);\n    this.plane.rotation.x = -Math.PI / 2;\n    this.plane.receiveShadow = true;\n    this.scene.add(this.plane);\n  }\n\n  initGroup() {\n    this.group = new THREE.Object3D();\n    this.group.add(this.plane);\n    this.cones.forEach(cone => this.group.add(cone));\n    this.cylinders.forEach(cylinder => this.group.add(cylinder));\n    this.scene.add(this.group);\n  }\n\n  initPivot() {\n    this.pivot = new THREE.Object3D();\n    this.pivot.add(this.group);\n    this.scene.add(this.pivot);\n  }\n\n  initBounceAnimation() {\n    this.bounceAnimation = anime({\n      targets: this.camera.position,\n      y: 2.2,\n      duration: 1200,\n      direction: 'alternate',\n      easing: 'linear',\n      loop: true\n    });\n    this.bounceAnimation.pause();\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case 'w':\n        this.forward();\n        break;\n      case 'a':\n        this.rotate('left');\n        break;\n      case 'd':\n        this.rotate('right');\n        break;\n      default:\n        break;\n    }\n  }\n\n  onKeyUp(e) {\n    switch (e.key) {\n      case 'w':\n        this.bounceAnimation.pause();\n        break;\n      default:\n        break;\n    }\n  }\n\n  onKeyDown(e) {\n    switch (e.key) {\n      case 'w':\n        this.bounceAnimation.play();\n        break;\n      default:\n        break;\n    }\n  }\n\n  forward() {\n    this.group.position.x -= Math.sin(this.pivot.rotation.y) * 0.01;\n    this.group.position.z += Math.cos(this.pivot.rotation.y) * 0.01;\n  }\n\n  rotate(direction) {\n    if (direction === 'right') {\n      this.pivot.rotation.y += .01;\n    }\n    if (direction === 'left') {\n      this.pivot.rotation.y -= .01;\n    }\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div ref={this.myRef}>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}